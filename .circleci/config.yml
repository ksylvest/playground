version: 2
jobs:
  rubocop:
    docker:
      -
        image: circleci/ruby:2.5.0
        environment:
          BUNDLE_JOBS: 4
          BUNDLE_RETRY: 4
          BUNDLE_PATH: vendor/bundle
    steps:
      - checkout

      # bundler
      -
        type: cache-restore
        key: bundle-{{ checksum "Gemfile.lock" }}
      -
        run: bundle check || bundle install
      -
        type: cache-save
        key: bundle-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      # rubocop
      -
        type: shell
        command: bundle exec rubocop --format progress --format html --out tmp/rubocop.html

      # artifacts
      -
        type: artifacts-store
        path: tmp/rubocop.html
        destination: rubocop.html

  brakeman:

  build:
    docker:
      -
        image: circleci/ruby:2.5.0-node-browsers
        environment:
          BUNDLE_JOBS: 4
          BUNDLE_RETRY: 4
          BUNDLE_PATH: vendor/bundle
          YARN_CACHE_FOLDER: 'tmp/yarn'
          RAILS_ENV: test
          RACK_ENV: test
          PGHOST: localhost
      -
        image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: playground_test
    steps:
      - checkout

      # bundler
      -
        type: cache-restore
        key: bundle-{{ checksum "Gemfile.lock" }}
      -
        run: bundle check || bundle install
      -
        type: cache-save
        key: bundle-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      # yarn
      -
        type: cache-restore
        key: yarn-{{ checksum "yarn.lock" }}
      -
        run: yarn install
      -
        type: cache-save
        key: yarn-{{ checksum "yarn.lock" }}
        paths:
          - tmp/yarn

      # postgres
      -
        run: dockerize -wait tcp://localhost:5432
      -
        run: bundle exec rake db:test:prepare

      # brakeman
      -
        type: shell
        command: bundle exec brakeman -z --format html --output tmp/brakeman.html

      # rspec
      -
        type: shell
        command: |
          bundle exec rspec \
            --profile \
            --format RspecJunitFormatter \
            --out tmp/results/rspec.xml \
            --format progress \
            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split)

      # results
      -
        type: test-results-store
        path: tmp/results

      # artifacts
      -
        type: artifacts-store
        path: coverage
        destination: coverage

      # artifacts
      -
        type: artifacts-store
        path: tmp/brakeman.html
        destination: brakeman.html
