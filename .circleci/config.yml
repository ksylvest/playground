version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.4.6
  docker: circleci/docker@2.4.0
  ruby: circleci/ruby@2.1.0

executors:
  default:
    docker:
      - image: cimg/ruby:3.3.4-browsers
      - image: cimg/postgres:15.2
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: playground_test
          POSTGRES_HOST_AUTH_METHOD: trust
    environment:
      RAILS_ENV: test
      PGHOST: localhost

commands:
  setup:
    steps:
      - ruby/install-deps
      - run: |
          curl -fsSL https://bun.sh/install | bash
          echo 'export BUN_INSTALL="$HOME/.bun"' >> "$BASH_ENV"
          echo 'export PATH="$BUN_INSTALL/bin:$PATH"' >> "$BASH_ENV"
      - run: bun install

jobs:
  eslint:
    executor: default
    steps:
      - checkout
      - setup
      - run: npx eslint

  prettier:
    executor: default
    steps:
      - checkout
      - setup
      - run: npx prettier --check app/packs

  tsc:
    executor: default
    steps:
      - checkout
      - setup
      - run: bun run tsc --pretty --strict --noemit --skiplibcheck

  rubocop:
    executor: default
    steps:
      - checkout
      - setup
      - ruby/rubocop-check

  brakeman:
    executor: default
    steps:
      - checkout
      - setup
      - run: bundle exec brakeman -z --format html --output tmp/brakeman.html
      - store_artifacts:
          path: tmp/brakeman.html
          destination: brakeman.html

  rspec:
    executor: default
    steps:
      - checkout
      - run: sudo apt-get update
      - run: sudo apt-get install libvips
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - setup
      - run: dockerize -wait tcp://localhost:5432 -timeout 2m # Postgres
      - run: ./bin/rails test:prepare
      - ruby/rspec-test
      - run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-$CC_TEST_REPORTER_VERSION > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter format-coverage -t simplecov coverage/coverage.json
          ./cc-test-reporter upload-coverage

  codegen:
    executor: default
    steps:
      - checkout
      - setup
      - run: bundle exec rake graphql:schema:generate
      - run: bun run codegen
      - run: |
          if [[ $(git diff app/graphql/app_schema.graphql app/packs/app_schema.ts) ]]; then
            echo '`bundle exec rake graphql:schema:generate`'
            echo '`bun run codegen`'
            git diff app/graphql/app_schema.graphql app/packs/app_schema.ts
            exit 1
          fi

  containerize:
    executor:
      name: docker/machine
      dlc: true
    parameters:
      image:
        type: string
        default: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
      tag:
        type: string
        default: << pipeline.git.revision >>`if [ '<< pipeline.git.branch >>' == 'main' ]; then echo ",latest"; fi`
    steps:
      - checkout
      - docker/check
      - docker/build:
          image: << parameters.image >>
          tag: << parameters.tag >>
      - docker/push:
          image: << parameters.image >>
          tag: << parameters.tag >>
      - when:
          condition:
            equal: [main, << pipeline.git.branch >>]
          steps:
            - run: curl $DEPLOY_URL

workflows:
  version: 2.1
  build:
    jobs:
      - eslint
      - prettier
      - brakeman
      - rubocop
      - rspec
      - tsc
      - codegen
      - containerize
