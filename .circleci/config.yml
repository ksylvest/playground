defaults: &defaults
  docker:
    -
      image: circleci/ruby:2.4.1-node-browsers
      environment:
        RAILS_ENV: test
        RACK_ENV: test
        PGHOST: localhost
    -
      image: circleci/postgres:9.6.2
      environment:
        POSTGRES_USER: circleci
        POSTGRES_DB: playground_test

version: 2
jobs:
  build:
    parallelism: 4
    <<: *defaults
    steps:
      - checkout
      -
        type: cache-restore
        key: dependencies-{{ checksum "Gemfile.lock" }}
      -
        run: bundle install --jobs=4 --retry=4 --path vendor/bundle
      -
        type: cache-save
        key: dependencies-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      -
        run: bundle exec rake db:setup

      -
        type: shell
        command: |
          bundle exec rspec \
            --profile \
            --format RspecJunitFormatter \
            --out tmp/results/rspec.xml \
            --format progress \
            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      -
        run:
          command:
            bundle exec codeclimate-test-reporter format-coverage coverage/codeclimate.$($CIRCLE_NODE_INDEX).json

      -
        store_test_results:
          path: tmp/results

      -
        store_artifacts:
          path: tmp/results

      -
        store_artifacts:
          path: tmp/capybara

      -
        persist_to_workspace:
          root: /tmp/workspace
          paths:
            - coverage

  report:
    <<: *defaults
    requires:
      - build
    steps:
      - checkout
      -
        type: cache-restore
        key: dependencies-{{ checksum "Gemfile.lock" }}
      -
        run: bundle install --jobs=4 --retry=4 --path vendor/bundle
      -
        type: cache-save
        key: dependencies-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      - attach_workspace:
        at: /tmp/workspace

      -
        run:
          command:
            bundle exec codeclimate-test-reporter sum-coverage /tmp/workspace/coverage/codeclimate.*.json | bundle exec codeclimate-test-reporter upload-coverage

workflows:
  version: 2
  execute:
    jobs:
      - build
      - report
